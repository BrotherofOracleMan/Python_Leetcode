class Solution(object):
    def lengthOfLongestSubstring(self, s):
        """
        :type s: str
        :rtype: int
        """
        hash_map = defaultdict(int)
        i = 0
        max_sliding_window  = 0
        
        for j in range(len(s)):
            if s[j] in hash_map:
                i = max(i,hash_map[s[j]])
            max_sliding_window = max(max_sliding_window,j-i+1)
            hash_map[s[j]] = j + 1
        return max_sliding_window
            
"""
class Solution(object):
    def lengthOfLongestSubstring(self, s):
        """
        :type s: str
        :rtype: int
        """
        i=0
        hash_table = defaultdict(int)
        max_sliding_window = 0
        
        for j in range(len(s)):
            while hash_table[s[j]]:
                hash_table[s[i]] -=1
                i+=1
            max_sliding_window = max(max_sliding_window, j-i+1)
            hash_table[s[j]]+=1
        return max_sliding_window
                u

"""
